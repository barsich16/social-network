{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","path","id","className","s","dialog","active","to","name","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","Dialogs","state","dialogPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","addMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","action","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,yBAAyB,SAAW,4B,sGCWnMC,EATK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCAvBC,EALC,SAACT,GACb,OACI,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,W,0CCuCpCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAXL,SAAAZ,GACnB,OACI,uBAAMc,SAAUd,EAAMe,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUV,KAAK,iBAC1BW,YAAY,sBAAsBC,SAAUC,QAEvD,wDAKGC,EAnCC,SAACtB,GACb,IAAIuB,EAAQvB,EAAMwB,WAEZC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAapB,KAAMoB,EAAEpB,KAAMN,GAAI0B,EAAE1B,QAC1E2B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASrB,QAASqB,EAAErB,aAKrE,OAAKV,EAAMgC,OAEP,sBAAK7B,UAAWC,IAAEsB,QAAlB,UACI,qBAAKvB,UAAWC,IAAE6B,aAAlB,SACMR,IAEN,sBAAKtB,UAAWC,IAAE0B,SAAlB,UACMD,EACF,cAAClB,EAAD,CAAqBG,SAZX,SAAAoB,GAClBlC,EAAMmC,WAAWD,EAAOE,yBAGF,cAAC,IAAD,CAAU7B,GAAI,Y,+CCfxC8B,EAA6B,SAAAd,GAAK,MAAK,CACvCS,OAAQT,EAAMe,KAAKN,S,OCiBRO,sBACXC,aAfkB,SAAAjB,GAClB,MAAO,CACHC,WAAYD,EAAMC,WAClBQ,OAAQT,EAAMe,KAAKN,WAGF,SAAAS,GACrB,MAAO,CACHN,WAAY,SAACC,GACT,IAAIM,EAASC,YAAwBP,GACrCK,EAASC,SDXW,SAAAE,GAAc,IACpCC,EADmC,4JAErC,WACI,OAAKC,KAAK9C,MAAMgC,OAET,cAACY,EAAD,eAAeE,KAAK9C,QAFI,cAAC,IAAD,CAAUO,GAAI,eAHZ,GACTwC,IAAMH,WAQtC,OADqCJ,YAAQH,EAARG,CAAoCK,KCO9DN,CAGbjB","file":"static/js/3.e5afef4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2phMJ\",\"dialogsItems\":\"Dialogs_dialogsItems__2uC8A\",\"active\":\"Dialogs_active__3py_C\",\"dialog\":\"Dialogs_dialog__33Bfb\",\"message\":\"Dialogs_message__OfeCD\",\"messages\":\"Dialogs_messages__3b6X0\"};","import s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsItem;\r\n","import s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n};\r\nexport default Message;\r\n","import s from './Dialogs.module.css'\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControl/FormsControl\";\r\nimport {required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogPage;\r\n\r\n    const dialogsElements = state.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>);\r\n    const messagesElements = state.messages.map(m => <Message message={m.message}/>)\r\n    const addNewMessage = values => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                { messagesElements }\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message:\" validate={required}/>\r\n            </div>\r\n            <button>Type message</button>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\nexport default Dialogs;\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            let action = addMessageActionCreator(newMessageBody);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}